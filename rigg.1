.Dd $Mdocdate$
.Dt RIGG 1
.Os
.Sh NAME
.Nm rigg
.Nd run indie games
.Sh SYNOPSIS
.Nm rigg
.Op Fl v
.Op Fl u Ar strict | permissive | none
.Ar engine
.Ar file
.Op Ar arguments
.Sh DESCRIPTION
.Nm
serves as an
.Ox Ns -adapted runtime for indie games based on certain engines
.Po
see
.Ar engine
.Pc .
There are many exceptions, mainly consisting of games using proprietary
middleware.
.Pp
.Nm
handles availability of files by using
.Xr unveil 2
to hide bundled files that conflict with
.Ox
runtimes and libraries.
This is a common occurrence with commercial games based on open-source
frameworks like FNA, LibGDX, or HashLink.
Besides hiding the conflicting files,
.Nm
also enforces a restricted filesystem view of the minimum necessary for
the engine via
.Xr unveil 2 .
.Pp
The arguments are as follows:
.Bl -tag -width Ds
.It Ar engine
Specify the engine to use.
Can select from:
.Ar mono ,
.Ar hl .
.It Ar file
The file to launch with the engine, e.g.
.Pa Game.exe
.Pq mono
or
.Pa hlboot.dat
.Pq hl .
.It Fl u
Set unveil mode.
.Ar strict
is the default and reduces read/write/create/execute permissions to a limited set of paths and hides game files as needed.
.Ar permissive
only hides game files as needed, but otherwise doesn't restrict filesystem access.
.Ar none
disables all uses of unveil.
.It Fl v
Enable verbose output.
.El
.Sh EXIT STATUS
.Ex -std
The exit status reflects the
.Ar engine Ns 's
return value.
See engine-specific documentation.
.Sh EXAMPLES
Run Mono game
.Pa Game.exe
with
.Fl windowed
flag:
.Bd -literal -offset indent
$ rigg mono Game.exe -windowed
.Ed
.Pp
Run HashLink game
.Pa hlboot.dat
with verbose output:
.Bd -literal -offset indent
$ rigg -v hl hlboot.dat -windowed
.Ed
.Sh SEE ALSO
.Xr mono 1 ,
.Xr unveil 2
.Sh AUTHORS
.An -nosplit
.An Thomas Frohwein Aq Mt thfr@openbsd.org
.Sh CAVEATS
The selection of directories that are
.Xr unveil 2 Ns 'd
may not cover all potential use cases.
